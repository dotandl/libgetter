# +----------------------------------------------------------+
# | libgetter - part of Getter Package Manager               |
# | Licensed under the GNU GPLv3 License. See LICENSE.txt    |
# |                                                          |
# | Copyright (C) 2021 dotandl                               |
# +----------------------------------------------------------+

name: CI - Build & Test

on:
  push: { branches: [main] }
  pull_request: { branches: [main] }

env:
  BUILD_TYPE: Release

jobs:
  build-and-test-linux:
    name: Build & Test - GNU/Linux (Ubuntu)
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with: { submodules: recursive }

      - name: Install required tools & libraries
        run: >
          sudo apt-get update && sudo apt-get install -y
          ninja-build valgrind libjson-c-dev libpcre2-dev libzip-dev libsqlite3-dev

      - name: Configure the CMake project
        run: >
          cmake
          -S "${{github.workspace}}"
          -B "${{github.workspace}}/build"
          -G Ninja
          -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build the project
        run: >
          cmake
          --build "${{github.workspace}}/build"
          --config ${{env.BUILD_TYPE}}

      - name: Run unit tests
        working-directory: "${{github.workspace}}/build"
        run: ctest -C ${{env.BUILD_TYPE}} -T memcheck

  build-and-test-macos:
    name: Build & Test - macOS
    runs-on: macos-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with: { submodules: recursive }

      - name: Install required tools & libraries
        run: >
          brew install
          ninja json-c pcre2 libzip sqlite3

      - name: Configure the CMake project
        run: >
          cmake
          -S "${{github.workspace}}"
          -B "${{github.workspace}}/build"
          -G Ninja
          -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build the project
        run: >
          cmake
          --build "${{github.workspace}}/build"
          --config ${{env.BUILD_TYPE}}

      - name: Run unit tests
        working-directory: "${{github.workspace}}/build"
        run: ctest -C ${{env.BUILD_TYPE}}

  build-and-test-windows:
    name: Build & Test - Windows
    runs-on: windows-latest
    defaults:
      run: { shell: "msys2 {0}" }

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with: { submodules: recursive }

      - name: Install required tools & libraries
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-json-c
            mingw-w64-x86_64-pcre2
            mingw-w64-x86_64-libzip
            mingw-w64-x86_64-sqlite3

      - name: Configure the CMake project
        run: >
          cmake
          -S "${{github.workspace}}"
          -B "${{github.workspace}}/build"
          -G Ninja
          -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build the project
        run: >
          cmake
          --build "${{github.workspace}}/build"
          --config ${{env.BUILD_TYPE}}

      - name: Run unit tests
        working-directory: "${{github.workspace}}/build"
        run: ctest -C ${{env.BUILD_TYPE}}
